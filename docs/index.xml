<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Randomness</title>
    <link>https://distributed-randomness.github.io/</link>
    <description>Recent content on Distributed Randomness</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 18:03:28 -0700</lastBuildDate><atom:link href="https://distributed-randomness.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Third Post</title>
      <link>https://distributed-randomness.github.io/posts/my-third-post/</link>
      <pubDate>Mon, 04 Oct 2021 18:03:28 -0700</pubDate>
      
      <guid>https://distributed-randomness.github.io/posts/my-third-post/</guid>
      <description>Some more content</description>
    </item>
    
    <item>
      <title>My Second Post</title>
      <link>https://distributed-randomness.github.io/posts/my-second-post/</link>
      <pubDate>Mon, 04 Oct 2021 18:03:17 -0700</pubDate>
      
      <guid>https://distributed-randomness.github.io/posts/my-second-post/</guid>
      <description>Some content</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://distributed-randomness.github.io/posts/my-first-post/</link>
      <pubDate>Sun, 03 Oct 2021 14:11:45 -0700</pubDate>
      
      <guid>https://distributed-randomness.github.io/posts/my-first-post/</guid>
      <description>This is the story about adding $x$ in the pages. $$\begin{eqnarray} y &amp;amp;=&amp;amp; x^4 + 4 \nonumber \
&amp;amp;=&amp;amp; (x^2+2)^2 -4x^2 \nonumber \
&amp;amp;\le&amp;amp;(x^2+2)^2 \nonumber \end{eqnarray}$$
Some sample rust code
impl&amp;lt;K, V&amp;gt; HashMap&amp;lt;K, V, RandomState&amp;gt; { /// Creates an empty `HashMap`.  ///  /// The hash map is initially created with a capacity of 0, so it will not allocate until it  /// is first inserted into.  ///  /// # Examples  ///  /// ```  /// use std::collections::HashMap;  /// let mut map: HashMap&amp;lt;&amp;amp;str, i32&amp;gt; = HashMap::new();  /// ```  #[inline] #[stable(feature = &amp;#34;rust1&amp;#34;, since = &amp;#34;1.</description>
    </item>
    
  </channel>
</rss>
